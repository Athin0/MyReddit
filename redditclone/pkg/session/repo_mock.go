// Code generated by MockGen. DO NOT EDIT.
// Source: go

// Package post is a generated GoMock package.
package session

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSessRepo is a mock of SessRepo interface.
type MockSessRepo struct {
	ctrl     *gomock.Controller
	recorder *MockSessRepoMockRecorder
}

// MockSessRepoMockRecorder is the mock recorder for MockSessRepo.
type MockSessRepoMockRecorder struct {
	mock *MockSessRepo
}

// NewMockSessRepo creates a new mock instance.
func NewMockSessRepo(ctrl *gomock.Controller) *MockSessRepo {
	mock := &MockSessRepo{ctrl: ctrl}
	mock.recorder = &MockSessRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSessRepo) EXPECT() *MockSessRepoMockRecorder {
	return m.recorder
}

// Check mocks base method.
func (m *MockSessRepo) Check(r *http.Request) (*Session, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Check", r)
	ret0, _ := ret[0].(*Session)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Check indicates an expected call of Check.
func (mr *MockSessRepoMockRecorder) Check(r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Check", reflect.TypeOf((*MockSessRepo)(nil).Check), r)
}

// Create mocks base method.
func (m *MockSessRepo) Create(w http.ResponseWriter, userID int64) (*Session, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", w, userID)
	ret0, _ := ret[0].(*Session)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockSessRepoMockRecorder) Create(w, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockSessRepo)(nil).Create), w, userID)
}

// DestroyCurrent mocks base method.
func (m *MockSessRepo) DestroyCurrent(w http.ResponseWriter, r *http.Request) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DestroyCurrent", w, r)
	ret0, _ := ret[0].(error)
	return ret0
}

// DestroyCurrent indicates an expected call of DestroyCurrent.
func (mr *MockSessRepoMockRecorder) DestroyCurrent(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DestroyCurrent", reflect.TypeOf((*MockSessRepo)(nil).DestroyCurrent), w, r)
}
